{
  "name": "vargs",
  "description": "practical variable argument handling",
  "url": "http://github.com/cloudhead/vargs",
  "keywords": [
    "argument",
    "arguments"
  ],
  "author": {
    "name": "Alexis Sellier",
    "email": "self@cloudhead.net"
  },
  "contributors": [],
  "version": "0.1.0",
  "main": "./lib/vargs",
  "directories": {
    "lib": "./lib"
  },
  "engines": {
    "node": ">=0.1.93"
  },
  "readme": "\nvargs\n=====\n\n> variable argument handling for functions taking a callback\n\nrationale\n----------\n\nJavaScript has very poor argument handling. *vargs* tries to make it simpler.\n\nsynopsis\n--------\n\n    var Args = require(\"vargs\").Constructor;\n  \n    function (/* [arg1, arg2, ...][,callback] */) {\n        var args = new(Args)(arguments);\n        \n        args.first;    // first argument\n        args.last;     // last argument before callback\n        args.callback; // callback argument, or an empty function\n        args.all;      // all arguments except callback\n        args.length;   // number of arguments, not including callback\n        \n        args.callbackGiven(); // returns true or false\n        args.at(-1);          // last argument, including callback\n        args.array;           // all arguments, including callback\n    }\n\nexample\n-------\n\nFor a real-world example of *vargs*, check <http://github.com/cloudhead/cradle>\n",
  "readmeFilename": "README.md",
  "_id": "vargs@0.1.0",
  "dist": {
    "shasum": "4392f9c6928c06ed0d46dbcfee6913d2835576ed"
  },
  "_from": "vargs@~0.1.0",
  "_resolved": "https://registry.npmjs.org/vargs/-/vargs-0.1.0.tgz"
}
