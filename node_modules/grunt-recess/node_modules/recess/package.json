{
  "name": "recess",
  "description": "A simple, attractive code quality tool for CSS built on top of LESS",
  "version": "1.1.6",
  "author": {
    "name": "Jacob Thornton",
    "email": "jacob@twitter.com",
    "url": "https://github.com/fat"
  },
  "keywords": [
    "css",
    "lint"
  ],
  "licenses": [
    {
      "type": "Apache-2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    }
  ],
  "main": "./lib",
  "homepage": "http://twitter.github.com/recess",
  "engines": {
    "node": ">= 0.4.0"
  },
  "dependencies": {
    "colors": ">= 0.3.0",
    "nopt": ">= 1.0.10",
    "underscore": ">= 1.2.1",
    "watch": ">= 0.5.1",
    "less": ">= 1.3.0"
  },
  "directories": {
    "bin": "./bin"
  },
  "scripts": {
    "test": "node test"
  },
  "bin": {
    "recess": "./bin/recess"
  },
  "preferGlobal": true,
  "readme": "RECESS [![Build Status](https://secure.travis-ci.org/twitter/recess.png)](http://travis-ci.org/twitter/recess)\n======\n\nDeveloped at Twitter to support our internal styleguide, RECESS is a simple, attractive code quality tool for CSS built on top of LESS.\n\nIncorporate it into your development process as a linter, or integrate it directly into your build system as a compiler, RECESS will keep your source looking clean and super manageable.\n\n\nGENERAL USE\n-----------\n\n```CLI\n$ recess [path] [options]\n```\n\nOPTIONS\n-------\n\n- --compile - compiles your code and outputs it to the terminal. Fixes white space and sort order. Can compile css or less.\n- --compress - compress your compiled code.\n- --config - accepts a path, which specifies a json config object\n- --stripColors - removes color from output (useful when logging)\n- --watch - watch filesystem for changes, useful when compiling Less projects\n- --noIDs - doesn't complain about using IDs in your stylesheets\n- --noJSPrefix - doesn't complain about styling `.js-` prefixed classnames\n- --noOverqualifying - doesn't complain about overqualified selectors (ie: `div#foo.bar`)\n- --noUnderscores - doesn't complain about using underscores in your class names\n- --noUniversalSelectors - doesn't complain about using the universal `*` selector\n- --prefixWhitespace - adds whitespace prefix to line up vender prefixed properties\n- --strictPropertyOrder - doesn't looking into your property ordering\n- --zeroUnits - doesn't complain if you add units to values of 0\n\n\nEXAMPLES\n--------\n\nLint all css files\n\n```CLI\n$ recess *.css\n```\n\nLint file, ignore styling of IDs\n\n```CLI\n$ recess ./bootstrap.css --noIds false\n```\n\nCompile and compress .less file, then output it to a new file\n\n```CLI\n$ recess ./bootstrap.less --compress > ./bootstrap-production.css\n```\n\nWatch a directory for changes and auto compile a css file from the changes. *experimental*\n\n```CLI\n$ recess input.less:ouput.css --watch watch/this/dir/for/changes\n```\n\nWatch a single file for changes and auto compile a css file from the changes. *experimental*\n\n```CLI\n$ recess input.less:ouput.css --watch\n```\n\nPROGRAMMATIC API\n----------------\n\nRecess provides a pretty simple programmatic api.\n\n```JS\nvar recess = require('recess')\n```\n\nOnce you've required recess, just pass it a `path` (or array of paths) and an optional `options` object and an optional `callback`:\n\n```js\nrecess(['../fat.css', '../twitter.css'], { compile: true }, callback)\n```\n\nThe following options (and defaults) are available in the programatic api:\n\n- compile: false\n- compress: false\n- noIDs: true\n- noJSPrefix: true\n- noOverqualifying: true\n- noUnderscores: true\n- noUniversalSelectors: true\n- prefixWhitespace: true\n- strictPropertyOrder: true\n- stripColors: false\n- zeroUnits: true\n\nThe callback is fired when each instance has finished processessing an input. The callback is passed an array of of instances (one for each path). The instances have a bunch of useful things on them like the raw data and an array of output strings.\n\nWhen compiling, access the compiled source through the output property:\n\n```js\nvar recess = require('recess')\n\nrecess('./js/fat.css', { compile: true }, function (err, obj) {\n  if (err) throw err\n  console.log(\n  \tobj // recess instance for fat.css\n  , obj.output // array of loggable content\n  , obj.errors // array of failed lint rules\n  )\n})\n```\n\nINSTALLATION\n------------\n\nTo install recess you need both node and npm installed.\n\n```CLI\n$ npm install recess -g\n```\n\nAUTHORS\n------------\n\n+ **Jacob Thornton**: https://twitter.com/fat\n\nLICENSE\n------------\n\nCopyright 2012 Twitter, Inc.\n\nLicensed under the Apache License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0",
  "readmeFilename": "README.md",
  "_id": "recess@1.1.6",
  "_from": "recess@~1.1.6"
}
