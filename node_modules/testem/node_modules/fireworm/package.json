{
  "name": "fireworm",
  "version": "0.0.8",
  "description": "A crawling file watcher.",
  "main": "fireworm.js",
  "scripts": {
    "test": "node_modules/.bin/mocha -R nyan *_tests.js"
  },
  "repository": "",
  "keywords": [
    "filewatching",
    "utility"
  ],
  "author": {
    "name": "Toby Ho"
  },
  "license": "MIT",
  "devDependencies": {
    "mocha": "~1.6.0",
    "chai": "~1.3.0",
    "sinon": "~1.5.0"
  },
  "dependencies": {
    "minimatch": "~0.2.9",
    "async": "~0.1.22",
    "set": "~1.0.0"
  },
  "readme": "Fireworm\n========\n\nFireworm is a crawling file watcher.\n\nUsage\n-----\n\n    var fireworm = require('fireworm')\n\n    var fw = fireworm()\n\n    // Add the files you want to watch for changes on (can be glob)\n    fw.add('scripts/*.js')\n    fw.add('tests/*.js')\n\n    // register for the `change` event\n    fw.on('change', function(filename){\n        console.log(filename + ' just changed!')\n    })\n\nWhy is this different from other file watchers?\n-----------------------------------------------\n\nFireworm works by crawling and re-crawling the relevant directories when necessary. Because of this, it can detect newly created files, new files in newly created directories, re-created files, and even new files within re-created directories too - as long as the file matches the paths you are watching.\n",
  "_id": "fireworm@0.0.8",
  "_from": "fireworm@*"
}
